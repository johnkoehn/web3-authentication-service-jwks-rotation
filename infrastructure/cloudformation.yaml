
AWSTemplateFormatVersion: "2010-09-09"
Description: Infrastructure to rotate JWKS
Parameters:
  ServiceName:
    Type: String
    Description: The name of the service
  CloudFrontDistributionArn:
    Type: String
    Description: The arn of the cloudfront distribution to update
  S3BucketName:
    Type: String
    Description: The name of the storage bucket that has the JWKS
  SecretName:
    Type: String
    Description: The name (arn) of the secrets manager storing the keyset
  EcsServiceName:
    Type: String
    Description: The name of the ECS service running the authentication API
  EcsClusterName:
    Type: String
    Description: The name of the ECS cluster
  DistributionId:
    Type: String
    Description: The distribution id
  BaseAuthUrl:
    Type: String
    Description: The base url of the authentication service
Resources:
  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Ref ServiceName
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: !Sub ${ServiceName}-policy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
            - Action:
                - logs:CreateLogGroup
                - logs:CreateLogStream
                - logs:PutLogEvents
                - logs:DescribeLogStreams
              Effect: Allow
              Resource: 'arn:aws:logs:*:*:*'
            - Action:
                - secretsmanager:DescribeSecret
                - secretsmanager:GetSecretValue
                - secretsmanager:PutSecretValue
                - secretsmanager:UpdateSecretVersionStage
                - secretsmanager:GetRandomPassword
              Effect: Allow
              Resource: !Ref SecretName
            - Action:
                - cloudfront:CreateInvalidation
                - cloudfront:GetInvalidation
              Resource: !Ref CloudFrontDistributionArn
              Effect: Allow
            - Action:
                - "s3:GetObject"
                - "s3:PutObject"
              Effect: "Allow"
              Resource:
                - !Sub arn:aws:s3:::${S3BucketName}/*
                - !Sub arn:aws:s3:::${S3BucketName}
            - Action:
                - ecs:*
              Effect: Allow
              Resource: '*'
  AwsLambda:
    Type: AWS::Lambda::Function
    Properties:
      Description: JWKS Rotation Lambda
      FunctionName: !Ref ServiceName
      Handler: ./src/rotateHandler.handler
      Code: ../
      Runtime: nodejs14.x
      MemorySize: 256
      Role: !GetAtt LambdaRole.Arn
      Timeout: 600 # 10 minutes
      Environment:
        Variables:
          JWKS_BUCKET: !Ref S3BucketName
          DISTRIBUTION_ID: !Ref DistributionId
          BASE_AUTH_URL: !Ref BaseAuthUrl
          ECS_SERVICE_NAME: !Ref EcsServiceName
          ECS_CLUSTER_NAME: !Ref EcsClusterName
  SecretsManagerInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref AwsLambda
      Action: lambda:InvokeFunction
      Principal: secretsmanager.amazonaws.com

